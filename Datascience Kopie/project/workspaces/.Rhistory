vector_diffs = c(diff_glyhb, diff_chol, diff_stab.glu)
vector_diffs<0
data.frame(names, vector_diffs)
diff.glyh = median(dat$glyhb) - mean(dat$glyhb)
diff.chol = median(dat$chol) - mean(dat$chol)
diff.stab_glu = median(dat$stab.glu) - mean(dat$stab.glu)
XX = data.frame(diff = c(diff.glyh,diff.chol,diff.stab_glu),row.names = c('Glyb','Chol','Stab Glu'))
XX$direction = ifelse(XX$diff >0, 'Positive','Negative' )
XX
plot(dat$stab.glu,dat$glyhb,
pch=20,
xlab='Stabilized glucose',
ylab='Glycosylated hemoglobin'
)
plot(dat$weight,dat$glyhb,
pch=20,
xlab='Weight',
ylab='Glycosylated hemoglobin'
)
plot(dat$glyhb,dat$weight,
pch=20,
xlab='Weight',
ylab='Glycosylated hemoglobin'
)
plot(dat$frame, dat$glyhb,
pch=20,
xlab='Weight',
ylab='Glycosylated hemoglobin'
)
plot(dat$frame, dat$glyhb,
pch=20,
xlab='frame',
ylab='Glycosylated hemoglobin'
)
## compute the Pearson correlation
cor(dat$stab.glu,dat$glyhb,method='pearson')
##
## compute the Spearman correlation
cor(dat$stab.glu,dat$glyhb,method='spearman')
plot(rank(dat$stab.glu),rank(dat$glyhb),
pch=20,
xlab='Ranks Stabilized glucose',
ylab='Ranks Glycosylated hemoglobin'
)
plot(rank(dat$stab.glu),rank(dat$glyhb),
pch=50,
xlab='Ranks Stabilized glucose',
ylab='Ranks Glycosylated hemoglobin'
)
plot(rank(dat$stab.glu),rank(dat$glyhb),
pch=20,
xlab='Ranks Stabilized glucose',
ylab='Ranks Glycosylated hemoglobin'
)
plot(dat$hip, dat$waist, #
pch=20,
xlab = "Hip",
ylab = "Waist"
)
plot(dat$hip, dat$waist, #
pch=20,
xlab = "Hip",
ylab = "Waist"
)
cor(dat$hip, dat$waist, method = Pearson)
plot(dat$hip, dat$waist, #
pch=20,
xlab = "Hip",
ylab = "Waist"
)
cor(dat$hip, dat$waist, method = "Pearson")
plot(dat$hip, dat$waist, #
pch=20,
xlab = "Hip",
ylab = "Waist"
)
cor(dat$hip, dat$waist, method = "pearson")
cor(dat$hip, dat$waist, method = "spearman")
plot(dat$hip, dat$waist, #
pch=20,
xlab = "Hip",
ylab = "Waist"
)
cor(dat$hip, dat$waist, method = "pearson")
cor(dat$hip, dat$waist, method = "spearman")
#Not really different but I still want to plot both for exercise purposes:
plot(rank(dat$hip), rank(dat$waist),
pch=20,
xlab = "Rank of Hip",
ylab = "Rank of waist")
library(knitr)
library(rmdformats)
## Global options
options(max.print="120")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=120)
dat = read.delim('https://tinyurl.com/y4fark9g', stringsAsFactors = FALSE)
rownames(dat) = dat$id
dat = dat[, -which(colnames(dat) %in% c("id","bp.2s", "bp.2d", "time.ppn"))]
dat = dat[,c(8,6,11,9,10,14,15,2,5,1,3,4,12,13)]
rmv.rows = apply(dat,1,function(x){sum(is.na(x))}) # Go through each row and sum up all missing values
dat = dat[- which(rmv.rows > 0),] # Removing any row with 1 or more missing values
rm(rmv.rows)
dat$location = factor(dat$location) #making data nominal
dat$gender = factor(dat$gender) #making data nominal
dat$frame = factor(dat$frame, levels=c("small", "medium", "large")) #making data ordinal
mean(dat$stab.glu)
median(dat$stab.glu)
quantile(dat$stab.glu)
diff.glyh = median(dat$glyhb) - mean(dat$glyhb)
diff.chol = median(dat$chol) - mean(dat$chol)
diff.stab_glu = median(dat$stab.glu) - mean(dat$stab.glu)
##
XX = data.frame(diff = c(diff.glyh,diff.chol,diff.stab_glu),row.names = c('Glyb','Chol','Stab Glu'))
XX$direction = ifelse(XX$diff >0, 'Positive','Negative' )
XX
q = quantile(dat$glyhb,probs=c(0.1,0.9))
glyhb.trimmed = dat$glyhb[dat$glyhb > q[1] & dat$glyhb < q[2]]
## Without trimming
mean(dat$glyhb);median(dat$glyhb)
mean(glyhb.trimmed);median(glyhb.trimmed)
draw = function(n,col=c('red','blue')) {
m = mean(dat[,n],na.rm=TRUE)
M = median(dat[,n],na.rm=TRUE)
##
hist(dat[,n],breaks=20,main=n);abline(v=c(m,M),lty=3,lwd=2,col=col)
}
draw('chol',col=c('orange','black'))
plot(dat$stab.glu,dat$glyhb,
pch=20,
xlab='Stabilized glucose',
ylab='Glycosylated hemoglobin'
)
## compute the Pearson correlation
cor(dat$stab.glu,dat$glyhb,method='pearson')
##
## compute the Spearman correlation
cor(dat$stab.glu,dat$glyhb,method='spearman')
plot(rank(dat$stab.glu),rank(dat$glyhb),
pch=20,
xlab='Ranks Stabilized glucose',
ylab='Ranks Glycosylated hemoglobin'
)
for (i in 1:length(x)) {print(x[i]^2)}
dat.num = dat[,-(1:3)]
## Solution 1 : for loop
correlation.mat = matrix(nrow = ncol(dat.num),
ncol = ncol(dat.num)
)
rownames(correlation.mat) = colnames(dat.num)
colnames(correlation.mat) = colnames(dat.num)
for (i in 1:ncol(dat.num)) {
for (j in 1:ncol(dat.num)) {
correlation.mat[i,j] = cor(dat.num[,i],dat.num[,j])
#print(correlation.mat)
}
}
pheatmap(correlation.mat)
library(pheatmap)
dat.num = dat[,-(1:3)]
## Solution 1 : for loop
correlation.mat = matrix(nrow = ncol(dat.num),
ncol = ncol(dat.num)
)
rownames(correlation.mat) = colnames(dat.num)
colnames(correlation.mat) = colnames(dat.num)
for (i in 1:ncol(dat.num)) {
for (j in 1:ncol(dat.num)) {
correlation.mat[i,j] = cor(dat.num[,i],dat.num[,j])
#print(correlation.mat)
}
}
pheatmap(correlation.mat)
## Solution 2 :  sapply function
correlation.mat = sapply(1:ncol(dat.num),function(i) {
sapply(1:ncol(dat.num),function(j) {
cor(dat.num[,i],dat.num[,j])
})})
rownames(correlation.mat) = colnames(dat.num)
colnames(correlation.mat) = colnames(dat.num)
## Solution 3 ...
correlation.mat = cor(dat.num)
qqnorms(rpois(seq(0.01, 0.99, 0.005), lambda = 20)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
qqnorms(rpois(seq(0.01, 0.99, 0.005), lambda = 20)
qqnorms(rpois(seq(0.01, 0.99, 0.005), lambda = 20)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20))
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 5))
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 100))
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 100))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20))
knitr::opts_chunk$set(echo = TRUE)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20))
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 50))
knitr::opts_chunk$set(echo = TRUE)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20))
knitr::opts_chunk$set(echo = TRUE)
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 20))
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 5))
qqnorm(rpois(seq(0.01, 0.99, 0.005), lambda = 100))
X= sapply(1:100, function (i))
X= sapply(1:100, function (i)
X= sapply(1:100, function (i))
X= sapply(1:100, function(i))
X= sapply(1:100, function(i) rnorm)
X= sapply(1:100, function(i) rnorm)
X= sapply(1:100, function(i) rnorm)
dim(X)
X= sapply(1:100, function(i) rnorm(N,m,s))
dim(X)
X= sapply(1:100, function(i) rnorm(N,m,s))
dim(X)
N
N
m
s
dat
View(dat)
mean(dat)
max(dat)
print(1:10)
Dat
colMeans(Dat)
if(!requireNamespace("BiocManager", quitely=TRUE))
install.packages("BiocManager")
library(BiocManager)
BiocManager::install("vsn")
library(pheatmap)
install.packages(c("cli", "ggplot2", "MASS", "ps", "testthat", "tibble", "vctrs", "xfun", "zoo"))
#Load libraries
library(affy)
library(vctrs)
library(vsn)
library(vctrs)
library(vsn)
install.packages("vctrs")
install.packages(c("cli", "ggplot2", "MASS", "ps", "testthat", "tibble", "vctrs", "xfun", "zoo"))
install.packages("cli")
library(cli)
detach("package:cli", unload = TRUE)
remove.packages("cli")
install.packages("cli")
# 0) Load Libraries
#------------------
library(affy)
remove.packages("affy")
install.packages("affy")
install.packages('devtools') #assuming it is not already installed
install_github('andreacirilloac/updateR')
library(updateR)
# 0) Load Libraries
#------------------
library(affy)
install.packages("affy")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("vctrs")
install.packages("cli")
install.packages("ggplot2")
library(tidyverse)
install.packages("broom")
install.packages("ggplot2")
install.packages("xfun")
update()
install.packages('devtools')
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
install.packages("MASS")
# 0) Load Libraries
#------------------
library(affy)
install.packages("affy")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("vsn")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affy")
force=TRUE
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affy")
force = TRUE
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("AnnotationDbi")
# 0) Load Libraries
#------------------
library(affy)
library(vsn)
library(AnnotationDbi)
library(mouse4302mmenstcdf) #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
setwd("/Users/lydiasteiner/Desktop/Datascience/project/rawdata")
wd
data.mouse=ReadAffy()
data.mouse=ReadAffy()
library(mouse4302mmenstcdf, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(mouse4302mmenstcdf, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project/packages") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(mouse4302mmenstprobe, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project/packages") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(limma)
library(AnnotationDbi)
library(tidyverse)
setwd("/Users/lydiasteiner/Desktop/Datascience/project/rawdata")
data.mouse=ReadAffy()
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
setwd("/Users/lydiasteiner/Desktop/Datascience/project/rawdata/GSE28389_RAW")
data.mouse=ReadAffy()
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
setwd("/Users/lydiasteiner/Desktop/Datascience/project/workspaces")
save.image(file="rawdata_mouse_28389.rda")
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
data.mouse=ReadAffy()
data.mouse=ReadAffy()
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
data.mouse
data.mouse=ReadAffy()
data.mouse=ReadAffy()
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,3], col=rainbow(100, start=0, end=0.75)[100:1])
data.mouse=ReadAffy()
data.mouse@cdfName <- "mouse4302mmenstcdf"
data.mouse@cdfName <- "mouse4302mmenstcdf"
data.mouse@cdfName <- "mouse4302mmenstcdf"
data.mouse@cdfName <- "GSE28389_RAW"
setwd("/Users/lydiasteiner/Desktop/Datascience/project/workspaces")
save.image(file="rawdata_mouse_28389.rda")
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
data.mouse=ReadAffy()
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
library(mouse4302mmenstcdf) #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(mouse4302mmenstprobe) #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(limma)
library(mouse4302mmenstcdf, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project/packages") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(mouse4302mmenstprobe, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project/packages") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(limma)
library(AnnotationDbi)
library(tidyverse)
setwd("/Users/lydiasteiner/Desktop/Datascience/project/rawdata/GSE28389_RAW")
data.mouse=ReadAffy()
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
setwd("/Users/lydiasteiner/Desktop/Datascience/project/workspaces")
save.image(file="rawdata_mouse_28389.rda")
x11(width=9, height = 9)
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
save.image()
data.mouse
view(data.mouse)
image(data.mouse[,3], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,4], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,5], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,6], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,7], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,8], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,9], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,10], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,11], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,12], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,13], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,14], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,15], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,16], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,18], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,19], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,20], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,21], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,10], col=rainbow(100, start=0, end=0.75)[100:1])
# 0) Load Libraries
#------------------
library(affy)
library(vsn)
library(AnnotationDbi)
library(mouse4302mmenstcdf, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project/packages") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(mouse4302mmenstprobe, lib.loc = "/Users/lydiasteiner/Desktop/Datascience/project/packages") #download source files from brain array for "Affymetrix Mouse Genome 430 2.0 Array"
library(limma)
library(AnnotationDbi)
library(tidyverse)
setwd("/Users/lydiasteiner/Desktop/Datascience/project/rawdata/GSE28389_RAW")
data.mouse=ReadAffy()
data.mouse@cdfName <- "Mouse4302_Mm_ENST"
setwd("/Users/lydiasteiner/Desktop/Datascience/project/workspaces")
save.image(file="rawdata_mouse_28389.rda")
x11(width=9, height = 9)
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,10], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,11], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,12], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,13], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,14], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,15], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,16], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,18], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,19], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,20], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,21], col=rainbow(100, start=0, end=0.75)[100:1])
mouse.vsnrma <- vsnrma(data.mouse)
# 2.3) meanSdPlot
#----------------.
x11(width=9, height = 9)
meanSdPlot(mouse.vsnrma)
setwd("/Users/lydiasteiner/Desktop/Datascience/project")
dev.copy2pdf(file="GSE28389_meanSdPlot_normalized.pdf")
setwd("/Users/lydiasteiner/Desktop/Datascience/project/plots")
dev.copy2pdf(file="GSE28389_meanSdPlot_normalized.pdf")
mouse.vsnrma <- vsnrma(data.mouse)
setwd("/Users/nazliaybikeboldemir/Desktop/MoBi Data/ders MASTER/Praktika/Bioinfo/WorkSpaces")
save.image(file="normalized_data_39897.rda")
# 2.4) Boxplot
#-------------
# Before normalization:
x11(width=9, height = 9)
par(las=2)
mmi=c(1.5,1,1.04,0.9)
par(mai=mmi)
boxplot(data.mouse, col= rainbow(35), cex.axis=0.75, names= e,
main="Gene expression in different stages of mouse embroyogenesis before vsnrma-normalization \nGSE28389 (Irie et al., 2011)")
dev.copy2pdf(file="GSE28389_BoxPlot_before_norm.pdf")
# After Normalization:
x11(width=9, height = 9)
par(las=2)
mmi=c(1.5,1,1.1,0.9)
par(mai=mmi)
boxplot(exprs(mouse.vsnrma), col= rainbow(35), cex.axis=0.75,names=e,
main="Gene expression in different stages of mouse embroyogenesis after vsnrma-normalization \nGSE28389 (Irie et al., 2011)")
dev.copy2pdf(file="GSE28389_BoxPlot_normalizeddata.pdf")
dev.off()
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
x11(width=9, height = 9)
brew install --cask xquartz
brew install cask xquartz
brew cask install xquartz
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
setwd("/Users/lydiasteiner/Desktop/Datascience/project/plots")
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E7_5_rep1.pdf", width= 9 , height=9)
setwd("/Users/lydiasteiner/Desktop/Datascience/project/plots/qc")
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E7_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,2], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E7_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,3], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E7_5_rep3.pdf", width= 9 , height=9)
image(data.mouse[,4], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E8_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,5], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E8_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,6], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E8_5_rep3.pdf", width= 9 , height=9)
image(data.mouse[,7], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E9_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,8], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E9_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,9], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E9_5_rep3.pdf", width= 9 , height=9)
image(data.mouse[,10], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E10_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,11], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E10_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,12], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E10_5_rep3.pdf", width= 9 , height=9)
image(data.mouse[,13], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E12_5_rep1.pdf", width= 9 , height=9) #looks suspicious
image(data.mouse[,14], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E12_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,15], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E14_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,16], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E14_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E16_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,18], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E16_5_rep2.pdf", width= 9 , height=9)
image(data.mouse[,19], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E18_5_rep1.pdf", width= 9 , height=9)
image(data.mouse[,20], col=rainbow(100, start=0, end=0.75)[100:1])
dev.copy2pdf(file="GSM701717_Mouse_E18_5_rep2.pdf", width= 9 , height=9)
mouse.vsnrma <- vsnrma(data.mouse)
mouse.vsnrma <- vsnrma(data.mouse)
setwd("/Users/lydiasteiner/Desktop/Datascience/project/workspaces")
save.image(file="normalized_data_28389.rda")
# 2.3) meanSdPlot
#----------------.
x11(width=9, height = 9)
install(x11)
